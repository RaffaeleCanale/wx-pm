#!/bin/bash

function declareConstants() {
    $1 PROJECTS_DIR "__PROJECTS_DIR__"
    $1 WX_PATH "__PATH__"
    $1 CONFIG ".wxrc"
}

function getConfig() {
    test -f "$CONFIG" || error "$CONFIG not found"
    local result=`cat "$CONFIG" | jq -r ".$1"`
    if [ "$result" == "null" ]; then
        echo "$2"
    else
        echo "$result"
    fi
}

function getConfigPath() {
    local path=`getConfig "$1" "$2"`
    echo "$PWD/$path"
}

function printHelp() {
    cat << EOF

    TODO
EOF

    for module in "__ROOT__/modules/"*; do
        local moduleName=$(basename "$module")

        echo
        echo
        echo -n "      ${PROGNAME} "
        echoGreen "$moduleName "

        source "$module"
        modulePrintHelp
    done
}

function loadOptions() {
    unusedBehaviour="IGNORE"
    getOpt "--autocomplete" autocomplete
}

function autocomplete() {
    if [ $# -gt 1 ]; then
        # Targets a module's autocomplete
        local module="__ROOT__/modules/$2"
        source "$module"
        if type autocomplete &>/dev/null; then
            shift
            shift
            autocomplete "$@"
        fi
    else
        # Targets root autocomplete
        # local modules=()
        ls "__ROOT__/modules"
        # echo ${modules[@]} | sed "s/\b$component\b//g";
    fi
}


function run () {
    if $autocomplete; then
        autocomplete "$@"
        return 0
    fi

    hasMoreArgs $#

    local module="__ROOT__/modules/$1"

    if [ ! -f "$module" ]; then
        error "Unknown mode: $1"
    fi


    source "$module"
    shift
    ARGUMENTS=("$@")
    if type moduleLoadOptions &>/dev/null; then
        moduleLoadOptions
    fi

    if [ $unusedBehaviour != "IGNORE" ]; then
        checkUnused
    fi

    moduleRun "${ARGUMENTS[@]:+${ARGUMENTS[@]}}"
}

source "__STARTER__@v1"
