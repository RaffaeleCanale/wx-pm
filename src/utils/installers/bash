function install() {
    getConfigPath src src src
    getConfigPath dist dist dist

    _install
}

function _install() {
    test -e "$src" || stop "Source not found"

    buildProperties "$dist"
    verbose "Properties:"
    verbose "$(cat "$properties")"

    info "Compiling to $dist"
    test -d "$dist" && rm -r "$dist"
    if [ -d "$src" ]; then
        for file in "$src/"*; do
            compile "$file" "$dist" "$properties"
        done
    else
        compile "$src" "$dist" "$properties"
    fi
    crClear

    add_to_path "$dist"
}

function safeProp() {
    echo "__$1__"
}

function defaultProperties() {
    echo "`safeProp "ROOT"` = $1"
    echo "`safeProp "STARTER"` = $SCRIPTS_ROOT/utils/starter/scriptStarter"
}

function buildProperties() {
    local content=`defaultProperties "$1"`

    if hasConfig "config"; then
        getConfig _files "config[]"
        files=("$_files")

        for file in "${files[@]}"; do
            if [[ "$file" == *.properties ]]; then
                contentCat=`cat "$file"`
                content="${content}\n${contentCat}"
            fi
        done
    else
        verbose "No properties config found"
    fi

    createTmpFile properties
    echo -e "$content" > "$properties"
}

function compile() {
    local file="$1"
    local dst="$2"
    local properties="$3"

    safeMkdir "$dst"

    local fileC="$dst/$(basename "$file")"
    if [ -d "$file" ]; then
        if [ "$(basename $file)" != "node_modules" ]; then
            for f in "$file/"*; do
                compile "$f" "$fileC" "$properties"
            done
        else
            cp -r "$file" "$fileC"
        fi
    else
        crPrint "$file"
        "__ROOT__/utils/compiler" "$file" "$fileC" "$properties"
    fi
}

function add_to_path() {
	local dist="$1"
	local project_name=`basename $PWD`
    getConfig main main "$project_name"
	main_file="$dist/$main"

	test -f "$main_file" || stop "File $main_file not found"
    if [ ! -f "$WX_PATH/$main" ]; then
        ln -s "$main_file" "$WX_PATH/$main"
        info "Link at $WX_PATH/$main"
    fi
}
